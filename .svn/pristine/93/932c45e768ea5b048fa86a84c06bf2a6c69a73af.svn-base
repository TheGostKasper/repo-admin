(function () {

    var mrch = new Merchant();
    var oDetails = new OrderDetails();
    var orderObj = {
        pending: 0,
        accepted: 0,
        ready: 0,
        canceled: 0,
        delivered: 0
    }
    var total = 0;
    var totalOrder = 0;
    var totalusers = 0;
    var ios = 0;
    var android = 0;
    var arlang = 0;
    var enlang = 0;
    var glob_activity = [];
    var myChart;

    mrch.getData('order/state/list', 'GET', {}).then(function (data) {
        var _data = data.data;
        setTimeout(function () {
            var percent = drawChart(_data);
            applyOrderChanges(orderObj, percent);
            totalOrder = _data.orders;
            totalusers = _data.users;
            ios = _data.ios;
            android = _data.android;
            arlang = _data.arLang;
            enlang = _data.enLang;
            $('#totalUsers').html(totalusers);
            $('#totalMerchant').html(_data.merchants);
            $('#totalOrders').html(totalOrder);
            $('#iosUsers').text(_data.ios);
            $('#androidUsers').text(_data.android);
            drawDeviceUsage([ios, android]);
            drawLangDeviceUsage([arlang, enlang]);
        }, 500);
        gtTopOrd()
    }, function (err) { });

    function gtTopOrd() {
        mrch.getData('order/list/top', 'GET', {}).then(function (response) {
            if (response.data != null) {
                response = JSON.parse(JSON.stringify(response));
                addOrderToactivity(response.data.reverse());
            }
        }, function (err) { });
    }
    //$('div.x_panel').toggle( "highlight" );


    var hub = new SignalREntry();
    var notificationHub = hub.getConnectionHub();
    notificationHub.client.orderAdminNotify = function (data) {
        orderObj.pending++;
        var percent = drawChart(orderObj);
        applyOrderChanges(orderObj, percent);
        totalOrder++;
        $('#totalOrders').html(totalOrder);
        glob_activity.splice(0, 1);
        glob_activity.push(data);
        //drawActivity(data);
        applyChangesOnActivity(glob_activity);
    };

    notificationHub.client.updateOrderStatus = function (state, id) {
        var data = {};
        data.id = id;
        if (state == "Delivered") {
            orderObj.delivered++;
            orderObj.ready = (orderObj.ready > 0) ? orderObj.ready - 1 : 0;
            var percent = drawChart(orderObj);
            applyOrderChanges(orderObj, percent);
            data.state = "Delivered";
        } else {
            orderObj.canceled++;
            orderObj.accepted = (orderObj.accepted > 0) ? orderObj.accepted - 1 : 0;
            var percent = drawChart(orderObj);
            applyOrderChanges(orderObj, percent);
            data.state = "Canceled";
        }
        addOrderStateToActivity(data);
        console.log('updateOrderStatus');
    };
    notificationHub.client.updateReadyOrder = function (data) {
        orderObj.ready++;
        orderObj.accepted = (orderObj.accepted > 0) ? orderObj.accepted - 1 : 0;
        var percent = drawChart(orderObj);
        applyOrderChanges(orderObj, percent);
        addOrderStateToActivity(data);
    }
    notificationHub.client.updateAcceptOrder = function (data) {
        orderObj.accepted++;
        orderObj.pending = (orderObj.pending > 0) ? orderObj.pending - 1 : 0;
        console.log(orderObj.pending);
        var percent = drawChart(orderObj);
        applyOrderChanges(orderObj, percent);
        addOrderStateToActivity(data);
    }
    notificationHub.client.updateCancelOrder = function (orderId) {
        console.log(glob_activity)
        var data = {}
        orderObj.canceled++;
        data = getActivity(orderId);
        //if (data && data.state == 'Pending')
        //    orderObj.accepted = (orderObj.accepted > 0) ? orderObj.accepted - 1 : 0;
        //else
        orderObj.pending = (orderObj.pending > 0) ? orderObj.pending - 1 : 0;
        var percent = drawChart(orderObj);
        applyOrderChanges(orderObj, percent);

        data.state = 'Canceled';
        addOrderStateToActivity(data);
        console.log('updateCancelOrder');

    }
    notificationHub.client.userCreated = function (data) {
        totalusers++;
        $('#totalUsers').html(totalusers);

    }


    console.log(notificationHub);
    notificationHub.client.broadcastMessage = function (name, msg) {
        alert(name);
    }

    hub.getHubStarted().done(function () {
        $('.x_title').on('click', function () {

        });

        //notificationHub.server.sendToEhab("Ehab", "Welcome in Weelo");
    });

    function drawChart(data) {
        var arr = getArrayOfOrderStatus(data);
        drawChartToView(arr);
        return getPercentage(arr);
    }
    function getArrayOfOrderStatus(_data) {
        orderObj = {
            pending: _data.pending,
            accepted: _data.accepted,
            ready: _data.ready,
            canceled: _data.canceled,
            delivered: _data.delivered
        }
        return [orderObj.pending, orderObj.accepted, orderObj.ready, orderObj.canceled, orderObj.delivered]
    }
    function getPercentage(dataArray) {
        var total = 0;
        for (var i = 0; i < dataArray.length; i++) {
            total += dataArray[i]
        }
        return total;
    }
    function applyOrderChanges(orderObj, percent) {
        //$('#totalOrders').html(percent);
        $('#pendingOrders').css('width', (orderObj.pending / percent) * 100 + '%');
        $('#pendingOrdersNumber').html('Pending Order' + '<b class="pull-right">' + orderObj.pending + '</b>');

        $('#acceptedOrders').css('width', (orderObj.accepted / percent) * 100 + '%');
        $('#acceptedOrdersNumber').html('Accepted Order' + '<b class="pull-right">' + orderObj.accepted + '</b>');

        $('#readyOrders').css('width', (orderObj.ready / percent) * 100 + '%');
        $('#readyOrdersNumber').html('Ready Order' + '<b class="pull-right">' + orderObj.ready + '</b>');

        $('#canceledOrders').css('width', (orderObj.canceled / percent) * 100 + '%');
        $('#canceledOrdersNumber').html('Canceled Order' + '<b class="pull-right">' + orderObj.canceled + '</b>');

        $('#deliveredOrders').css('width', (orderObj.delivered / percent) * 100 + '%');
        $('#deliveredOrdersNumber').html('Delivered Order' + '<b class="pull-right">' + orderObj.delivered + '</b>');

    }
    function applyChangesOnActivity(data) {
        $('.list-unstyled').empty();
        for (var i = 0; i < data.length; i++) {
            drawActivity(data[i]);
        }
    }
    function drawChartToView(arr) {
        var chart = document.getElementById("bar-chart");
        $('#bar-chart').empty();
        if (myChart)
            myChart.destroy();
        myChart = new Chart(document.getElementById("bar-chart"), {
            type: 'bar',
            data: {
                labels: ["Pending", "Accepted", "Ready", "Canceled", "Delivered"],
                datasets: [
                  {
                      label: "# Order",
                      backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)'
                      ],
                      data: arr
                  }
                ]
            },
            options: {
                legend: { display: false },
                title: {
                    display: true,
                    text: 'Daily Order '
                }
            }
        });
    }
    function drawDeviceUsage(arr) {
        new Chart(document.getElementById("doughnut-chart"), {
            type: 'polarArea',
            data: {
                labels: ["IOS", "Android"],
                datasets: [
                  {
                      label: "Users",
                      backgroundColor: ["#3498DB", "#1ABB9C"],
                      data: arr
                  }
                ]
            },
            options: {
                title: {
                    display: true,
                    text: 'Devices'
                }
            }
        });
    }
    function drawLangDeviceUsage(arr) {
        
        new Chart(document.getElementById("lang-chart"), {
            type: 'polarArea',
            data: {
                labels: ["Arabic", "English"],
                datasets: [
                  {
                      label: "Users",
                      backgroundColor: ["#3498DB", "#1ABB9C"],
                      data: arr
                  }
                ]
            },
            options: {
                title: {
                    display: true,
                    text: 'Language Used'
                }
            }
        });
    }

    function addOrderStateToActivity(data) {
        UpdateActivity(data);
    }
    
    $(document).on('click', '.title a', function (e) {
        e.preventDefault();
       
        if ($(this).data('id') != '')
            oDetails.getOrder("order/details/" + $(this).data('id'), {}).then(function (data) {
                var or = data.data;
                $('#modal-ord-dt').modal('show');
                if (or != null) {
                    oDetails.bindToHtml([
                        { key: '.or-m-name', value: or.merchantName },
                        { key: '.or-m-phone', value: or.merchantPhone },
                        { key: '.or-c-address', value: or.customer.address },
                        { key: '.or-c-apt', value: or.customer.apt },
                        { key: '.or-c-mobile', value: or.customer.mobile },
                        { key: '.or-c-name', value: or.customer.name },
                        { key: '.or-c-note', value: or.customer.notes },
                        { key: '.or-status', value: or.status },
                        { key: '.or-acceptedBy', value: or.acceptedBy },
                        { key: '.or-handeledBy', value: or.handeledBy },
                        { key: '.or-ordernumber', value: or.orderNumber },
                        { key: '.or-grandTotal', value: or.grandTotal + 'EG' }]);
                    var _data = data.data.products;
                    var html = '';
                    for (var i = 0; i < _data.length; i++) {
                        var name = (_data[i].nameEN == "") ? _data[i].nameAR : _data[i].nameEN
                        html += '<tr><td>' + name + ' ' + _data[i].size + _data[i].unit + '</td><td>' + _data[i].quantity + 'x</td><td> ' + _data[i].price * _data[i].quantity + ' </td></tr> '
                    }
                    //html += '<tr><td colspan="2"></td><td>Total: ' + data.data.grandTotal + ' <br/>Tip: ' + data.data.tip + '.00 <br/>Discount: ' + data.data.discount + ' %<br/>Tax: ' + data.data.tax + ' %<br/>Service: ' + data.data.serviceFees + ' </td></tr>';
                    $('#productsList-lay').html(html);
                    $('.products-search-Info').removeClass('hide');
                    $('.pg-notfound').addClass('hide');
                    $('.creationDate').html(moment.utc(data.data.creationDate).toDate().toLocaleDateString());
                    getDate(data.data);
                    $('.or-card').show();
                    $('#modal-ord-dt').modal('show');

                } else {
                    $('.or-card').hide();
                    $('.not-found-lay').show();
                }

            }, function (err) {
                $('.or-card').show();
            });
        else {
            $('.or-card').hide();
            $('.not-found-lay').show();
        }
    });
    function bindToHtml(containerId, value) {
        console.log(containerId, value);
        $('.' + containerId).html(value);
    }
    function UpdateActivity(data) {
        var oActivity = $.grep(glob_activity, function (e) { return e.id == data.id; });
        if (oActivity != null) {
            oActivity[0].state = data.state;
            var arr = glob_activity;
            $('.list-unstyled').empty();
            addOrderToactivity(arr);
        }

    }
    function addOrderToactivity(response) {
        var result = response;
        glob_activity = [];
        for (var i = 0; i < result.length; i++) {
            var data = result[i];
            glob_activity.push(data);
            drawActivity(data);
        }
    }
    function getActivity(id) {
        return $.grep(glob_activity, function (e) { return e.id == id; })[0];
    }
    function drawActivity(data) {
        var date = (data.creationDate) ? new Date(data.creationDate).toLocaleTimeString() : '--';
        var grandTotal = (data.grandTotal) ? data.grandTotal : '--';
        var className = '';
        if (data.state == 'Pending') className = 'label-warning';
        if (data.state == 'Accepted') className = 'label-info';
        if (data.state == 'Ready') className = 'label-success';
        if (data.state == 'Delivered') className = 'label-deliver';
        if (data.state == 'Canceled') className = 'label-danger';
        var html = `
                       <div class ="listview__content">
                           <div class ="listview__heading title">
                           <a data-toggle="modal" data-id= ` + data.id + ` style="font-weight: 600;cursor: pointer; color: #3e95cd;"  data-target="#modal-ord-ds" >` + data.orderNumber + ` </a>
                            <span class = "status right `+ className + `" > ` + data.state + ` </span>
                           </div>
                           <p><span style="font-style:normal;"> `+ date + ` </span><a class="x-a">` + grandTotal + ` EG</a></p>
                       </div>

                    `
        $('.list-unstyled').prepend(html);
    }
}());